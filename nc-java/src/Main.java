import java.io.*;
import java.util.*;
import java.math.*;
import java.util.regex.*;
import java.util.stream.*;
import java.text.*;
import java.security.SecureRandom;
import java.util.function.*;
import java.util.concurrent.*;

import codefights.challenge.Biggestplus;
import codefights.challenge.Dashes;
import codefights.challenge.Kbonacci;
import codefights.challenge.TextDisplay;
import codefights.fight.uber.ParkingSpot;
import codefights.fight.uber.PerfectCity;
import codefights.interview.hashtables.PossibleSums;
import codefights.interview.hashtables.SwapLexOrder;

public class Main {
    public static void main(String[] args) {
//        SwapLexOrder test = new SwapLexOrder();
//        System.out.println(test.swapLexOrder("fixmfbhyutghwbyezkveyameoamqoi", new int[][]{
//                {8, 5},
//                {10, 8},
//                {4, 18},
//                {20, 12},
//                {5, 2},
//                {17, 2},
//                {13, 25},
//                {29, 12},
//                {22, 2},
//                {17, 11}
//        }));
//        System.out.println(test.swapLexOrder("abdc", new int[][]{
//                {1, 4},
//                {3, 4},
//        }));
//        System.out.println(test.swapLexOrder("lvvyfrbhgiyexoirhunnuejzhesylojwbyatfkrv", new int[][]{
//                {13, 23},
//                {13, 28},
//                {15, 20},
//                {24, 29},
//                {6, 7},
//                {3, 4},
//                {21, 30},
//                {2, 13},
//                {12, 15},
//                {19, 23},
//                {10, 19},
//                {13, 14},
//                {6, 16},
//                {17, 25},
//                {6, 21},
//                {17, 26},
//                {5, 6},
//                {12, 24}
//        }));
//        System.out.println(test.swapLexOrder("abcdefgh", new int[][]{
//                {1, 4},
//                {7, 8}
//        }));

        Biggestplus b = new Biggestplus();
//        System.out.println(Arrays.toString(b.biggestplus(new int[][]{
//                {6, 8, 0, 5, 9, 6, 7, 8, 9, 7},
//                {6, 6, 0, 1, 9, 6, 7, 8, 2, 7},
//                {7, 7, 7, 7, 7, 7, 7, 7, 7, 7},
//                {6, 7, 0, 1, 7, 6, 7, 6, 7, 7},
//                {6, 6, 0, 1, 6, 6, 7, 6, 9, 7},
//                {6, 6, 0, 1, 6, 6, 7, 6, 6, 7},
//                {1, 1, 1, 1, 1, 1, 7, 1, 1, 7},
//                {8, 8, 0, 1, 6, 6, 7, 6, 6, 7},
//                {1, 1, 1, 1, 1, 1, 7, 6, 5, 7}
//        })));
        System.out.println(Arrays.toString(b.biggestplus(new int[][]{
                {9, 8, 7, 5, 4, 1, 2, 3, 3, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 4},
                {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4},
                {8, 8, 8, 5, 8, 6, 2, 7, 2, 7, 6, 6, 2, 6, 3, 6, 6, 2, 5, 2, 7, 4, 3, 7, 1, 4},
                {9, 8, 7, 5, 7, 7, 2, 7, 2, 7, 7, 7, 2, 1, 3, 3, 1, 2, 1, 2, 7, 4, 3, 7, 1, 4},
                {6, 8, 6, 5, 6, 6, 6, 6, 6, 7, 6, 2, 2, 2, 3, 9, 0, 2, 1, 1, 1, 1, 0, 1, 1, 4},
                {5, 8, 7, 5, 5, 5, 2, 5, 5, 7, 5, 5, 5, 5, 3, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4},
                {4, 8, 7, 5, 3, 3, 2, 3, 3, 7, 3, 3, 3, 3, 3, 9, 0, 2, 2, 0, 4, 4, 0, 4, 4, 4},
                {4, 8, 7, 5, 4, 6, 2, 3, 3, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1, 0, 2, 1, 4},
                {4, 8, 7, 5, 0, 6, 2, 7, 6, 7, 0, 8, 3, 0, 3, 9, 0, 2, 0, 0, 0, 0, 0, 2, 1, 4},
                {4, 8, 7, 5, 1, 1, 2, 1, 6, 7, 1, 8, 1, 1, 3, 9, 3, 3, 3, 3, 3, 3, 0, 3, 1, 4},
                {2, 8, 2, 5, 2, 2, 2, 2, 6, 7, 2, 2, 3, 4, 3, 9, 4, 2, 2, 0, 4, 4, 0, 2, 1, 4},
                {4, 2, 7, 5, 9, 4, 4, 4, 6, 7, 4, 4, 4, 4, 3, 4, 4, 4, 9, 9, 9, 9, 0, 2, 1, 4},
                {5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5},
                {4, 1, 7, 5, 3, 3, 2, 3, 6, 7, 3, 8, 3, 3, 3, 9, 1, 2, 2, 7, 2, 4, 0, 2, 1, 4},
                {4, 1, 7, 5, 7, 7, 7, 7, 6, 7, 7, 7, 7, 7, 3, 7, 7, 2, 2, 7, 2, 5, 0, 2, 1, 4},
                {4, 5, 7, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 5, 0, 2, 1, 4},
                {4, 1, 7, 5, 2, 6, 2, 7, 6, 7, 4, 8, 8, 4, 3, 9, 4, 2, 2, 7, 2, 5, 0, 2, 1, 4},
                {4, 4, 7, 5, 4, 4, 2, 4, 6, 7, 4, 8, 8, 4, 3, 4, 4, 4, 2, 0, 0, 0, 0, 2, 1, 4},
                {4, 0, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 6, 3, 3, 2, 3, 3, 3, 0, 2, 1, 4},
                {4, 6, 7, 3, 6, 6, 2, 7, 6, 7, 3, 8, 8, 5, 3, 9, 0, 2, 2, 7, 2, 5, 0, 2, 1, 4},
                {2, 2, 7, 2, 2, 8, 2, 8, 6, 7, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2, 2, 2, 8, 9, 2, 4},
                {7, 7, 7, 7, 7, 3, 2, 3, 6, 7, 3, 8, 8, 4, 4, 9, 7, 1, 2, 1, 2, 5, 8, 9, 1, 4},
                {4, 1, 7, 3, 2, 5, 2, 6, 6, 7, 3, 5, 8, 4, 4, 9, 5, 1, 2, 7, 2, 5, 8, 9, 1, 4},
                {4, 1, 7, 8, 2, 8, 2, 6, 6, 7, 3, 8, 8, 4, 4, 9, 8, 1, 2, 2, 2, 5, 8, 9, 1, 4},
                {8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2, 8, 8, 8, 6, 8, 8, 8},
                {9, 0, 7, 8, 2, 0, 2, 6, 6, 7, 3, 9, 8, 4, 4, 9, 3, 1, 2, 2, 3, 5, 6, 9, 1, 5},
                {3, 3, 3, 3, 3, 3, 2, 3, 6, 7, 3, 3, 8, 4, 3, 3, 3, 3, 9, 9, 9, 9, 6, 9, 9, 3},
                {9, 2, 0, 8, 8, 2, 2, 6, 6, 3, 3, 9, 8, 4, 1, 9, 3, 2, 6, 2, 3, 5, 6, 2, 8, 5},
                {8, 8, 8, 8, 8, 8, 2, 6, 6, 3, 7, 7, 8, 4, 1, 9, 3, 2, 6, 2, 3, 5, 6, 2, 8, 5},
                {9, 1, 1, 8, 8, 1, 2, 6, 6, 3, 3, 7, 8, 4, 1, 7, 7, 2, 2, 7, 3, 5, 6, 2, 0, 7},
                {9, 4, 0, 8, 8, 8, 2, 7, 6, 3, 3, 4, 8, 4, 1, 5, 5, 4, 4, 4, 3, 4, 6, 2, 0, 7},
                {9, 8, 0, 9, 8, 7, 2, 6, 6, 3, 3, 7, 8, 4, 7, 6, 6, 4, 0, 0, 3, 4, 6, 2, 0, 7},
                {9, 6, 6, 9, 8, 6, 2, 6, 6, 3, 3, 2, 8, 4, 1, 7, 3, 4, 2, 3, 3, 4, 6, 2, 0, 7},
                {9, 8, 0, 9, 8, 1, 1, 1, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 6, 1, 1, 7},
                {9, 9, 9, 9, 9, 9, 2, 9, 4, 3, 3, 2, 1, 4, 1, 0, 8, 4, 8, 4, 8, 4, 6, 0, 0, 7},
                {9, 5, 5, 9, 9, 9, 2, 7, 4, 3, 3, 4, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 0, 7},
                {9, 3, 0, 9, 9, 9, 2, 7, 6, 3, 3, 5, 1, 4, 3, 5, 5, 7, 2, 4, 7, 4, 6, 4, 4, 7},
                {8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 6, 8, 8, 8},
                {9, 9, 9, 9, 9, 9, 2, 9, 9, 3, 3, 5, 1, 9, 9, 4, 4, 4, 4, 4, 4, 4, 6, 4, 8, 7},
                {9, 9, 9, 9, 9, 9, 9, 9, 9, 3, 3, 9, 9, 9, 3, 0, 0, 7, 0, 3, 7, 4, 6, 2, 8, 7},
                {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 6, 2, 8, 7},
                {0, 3, 0, 9, 8, 9, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 8, 7, 0, 3, 9, 4, 6, 4, 8, 7},
                {6, 3, 6, 9, 8, 9, 2, 3, 6, 3, 3, 2, 1, 7, 3, 7, 8, 7, 0, 3, 7, 4, 6, 4, 8, 7},
                {3, 3, 3, 9, 7, 9, 7, 3, 7, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 6, 6, 6, 6, 6, 6},
                {5, 3, 5, 9, 2, 9, 2, 7, 6, 3, 3, 5, 1, 5, 3, 5, 8, 5, 4, 4, 4, 4, 6, 4, 8, 7},
                {2, 3, 2, 9, 2, 9, 2, 2, 0, 3, 3, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 6, 4, 8, 7},
                {5, 3, 0, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 5, 8, 7, 0, 5, 5, 4, 6, 6, 8, 7}
        })));
//        System.out.println(Arrays.toString(b.biggestplus(new int[][]{
//                {3, 3, 3, 3, 3, 3, 3},
//                {3, 3, 3, 3, 3, 3, 3},
//                {3, 3, 3, 3, 3, 3, 3},
//                {3, 3, 3, 3, 3, 3, 3},
//                {3, 3, 3, 3, 3, 3, 3},
//                {3, 3, 3, 3, 3, 3, 3},
//                {3, 3, 3, 3, 3, 3, 3}
//        })));

    }
}
